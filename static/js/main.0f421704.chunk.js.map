{"version":3,"sources":["Context/useCookies.js","Context/index.js","Context/useSearch.js","Context/useGetBtc.js","Encabezado/index.js","BarraBusqueda/index.js","ListaTareas/index.js","Tarea/index.js","BotonCrear/index.js","Modal/index.js","Formulario/index.js","App/ui.js","App/index.js","reportWebVitals.js","index.js"],"names":["useCookies","nombreCookie","contenidoCookie","elementoGuardado","almacenamientoLocal","localStorage","getItem","JSON","parse","elementoSerializado","stringify","setItem","React","useState","elemento","setElemento","elementos","length","removeItem","elementoSerializados","AppContext","createContext","contenidoLista","texto","completada","AppProvider","props","tareas","guardar","valorBuscado","buscarTarea","tareasBuscadas","filter","tarea","textoTarea","toLowerCase","textoBuscado","includes","useSearch","data","obtenerData","error","setError","btc","setBtc","consultar","a","fetch","peticion","json","respuesta","useEffect","bpi","USD","rate","useGetBtc","tareasCompletadas","totalTareas","nombreDelAutor","openModal","setOpenModal","Provider","value","completar","indice","findIndex","nuevaLista","borrar","splice","agregarNueva","text","push","children","Encabezado","useContext","taresCompletadas","className","BarraBusqueda","placeholder","onChange","event","target","ListaTareas","Tarea","onClick","onComplete","onDelete","BotonCrear","prevState","Modal","ReactDOM","createPortal","document","body","Formulario","nuevaTarea","setNuevaTarea","cancelar","onSubmit","evento","preventDefault","type","UI","Fragment","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"yWAEA,SAASA,EAAWC,EAAcC,GAC9B,IACIC,EADEC,EAAsBC,aAAaC,QAAQL,GAGjD,GAAIG,EAOFD,EAAmBI,KAAKC,MAAMJ,OAPR,CAEtB,IAAMK,EAAsBF,KAAKG,UAAUR,GAC3CG,aAAaM,QAAQV,EAAcQ,GACnCN,EAAmBD,EAKrB,MAAgCU,IAAMC,SAASV,GAA/C,mBAAOW,EAAP,KAAiBC,EAAjB,KAUA,MAAO,CAACD,EATQ,SAACE,GACf,GAAGA,EAAUC,QAAU,EACrBZ,aAAaa,WAAWjB,OACrB,CACH,IAAMkB,EAAuBZ,KAAKG,UAAUM,GAC5CX,aAAaM,QAAQV,EAAckB,GAErCJ,EAAYC,K,sCClBZI,EAAaR,IAAMS,gBAEnBC,EAAiB,CACnB,CAACC,MAAO,UAAWC,YAAY,GAC/B,CAACD,MAAO,UAAWC,YAAY,GAC/B,CAACD,MAAO,UAAWC,YAAY,IAKnC,SAASC,EAAYC,GACjB,MAA0B1B,EAJV,kBAIkCsB,GAAlD,mBAAOK,EAAP,KAAeC,EAAf,KACA,ECfJ,SAAmBD,GAEf,MAAoCf,IAAMC,SAAS,IAAnD,mBAAOgB,EAAP,KAAqBC,EAArB,KAGGC,EAAiB,GAarB,OAXEA,EADCF,EAAaZ,QAAQ,EACLU,EAEAA,EAAOK,QACtB,SAAAC,GACE,IAAMC,EAAaD,EAAMV,MAAMY,cACzBC,EAAeP,EAAaM,cAClC,OAAOD,EAAWG,SAASD,MAK1B,CAACP,EAAcE,EAAgBD,GDHeQ,CAAUX,GAA9D,mBAAOE,EAAP,KAAqBE,EAArB,KAAqCD,EAArC,KAEA,EEjBJ,WACI,MAA4BlB,IAAMC,UAAS,GAA3C,mBAAO0B,EAAP,KAAaC,EAAb,KACA,EAA0B5B,IAAMC,SAAS,MAAzC,mBAAO4B,EAAP,KAAcC,EAAd,KACA,EAAsB9B,IAAMC,SAAS,MAArC,mBAAO8B,EAAP,KAAYC,EAAZ,KAEMC,EAAS,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,oDADb,cACVC,EADU,gBAEQA,EAASC,OAFjB,OAEVC,EAFU,OAGhBV,EAAYU,GAHI,2CAAH,qDAgBf,OAVAtC,IAAMuC,WAAU,WACd,IACEN,IACAD,EAAOL,EAAKa,IAAIC,IAAIC,MACpBZ,EAAS,MACV,MAAMD,GACLC,EAAS,+DAIN,CACLC,MACAF,SFNmBc,GAAdZ,EAAP,EAAOA,IAAKF,EAAZ,EAAYA,MAENe,EAAoB7B,EAAOK,QAAO,SAAAC,GAAK,OAAIA,EAAMT,cAAYP,OAC7DwC,EAAc9B,EAAOV,OAkB3B,EAAwBjB,EAFE,eACD,YACnB0D,EAAN,oBAEA,EAAkC9C,IAAMC,UAAS,GAAjD,mBAAO8C,EAAP,KAAkBC,EAAlB,KAUA,OACI,cAACxC,EAAWyC,SAAZ,CAAqBC,MAAO,CACxBnB,MACAF,QACAe,oBACAC,cACA5B,eACAC,cACAC,iBACAgC,UArCU,SAACxC,GACf,IAAMyC,EAASrC,EAAOsC,WAAU,SAAAhC,GAAK,OAAIA,EAAMV,QAAUA,KACnD2C,EAAU,YAAOvC,GACvBuC,EAAWF,GAAQxC,YAAc0C,EAAWF,GAAQxC,WACpDI,EAAQsC,IAkCJC,OA/BO,SAAC5C,GACZ,IAAMyC,EAASrC,EAAOsC,WAAU,SAAAhC,GAAK,OAAIA,EAAMV,QAAUA,KACnD2C,EAAU,YAAOvC,GACvBuC,EAAWE,OAAOJ,EAAQ,GAC1BpC,EAAQsC,IA4BJR,iBACAC,YACAC,eACAS,aAtBa,SAACC,GACtB,IAAMJ,EAAU,YAAOvC,GACvBuC,EAAWK,KAAK,CACZhD,MAAO+C,EACP9C,YAAY,IAEhBI,EAAQsC,KAGJ,SAeKxC,EAAM8C,WGhEnB,SAASC,IACL,MAAwC7D,IAAM8D,WAAWtD,GAAlDuD,EAAP,EAAOA,iBAAkBlB,EAAzB,EAAyBA,YACzB,OACI,qBAAImB,UAAU,aAAd,gCACwBD,EADxB,OAC8ClB,K,MCJtD,SAASoB,IACP,MAAoCjE,IAAM8D,WAAWtD,GAA9CS,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,YAInB,OACE,uBACE8C,UAAU,gBACVE,YAAY,iBACZC,SAPO,SAACC,GACZlD,EAAYkD,EAAMC,OAAOnB,QAOrBA,MAAOjC,I,MCZf,SAASqD,EAAYxD,GACjB,OACI,kCACI,6BACKA,EAAM8C,a,MCJvB,SAASW,EAAMzD,GACX,OACI,qBAAIkD,UAAU,QAAd,UACI,sBACIA,UAAU,kBACVQ,QAAS1D,EAAM2D,WAFnB,uBAIA,mBAAGT,UAAS,kBAAalD,EAAMF,YAAc,uBAA7C,SACKE,EAAMH,QAEX,sBACIqD,UAAU,mBACVQ,QAAS1D,EAAM4D,SAFnB,uB,MCTZ,SAASC,EAAW7D,GAIhB,OACI,wBACIkD,UAAU,aACVQ,QAAS,WALb1D,EAAMkC,cAAa,SAAA4B,GAAS,OAAKA,MAGjC,e,MCJR,SAASC,EAAT,GAA2B,IAAXjB,EAAU,EAAVA,SAEZ,OAAOkB,IAASC,aACZ,qBAAKf,UAAU,kBAAf,SACKJ,IAELoB,SAASC,M,MCNjB,SAASC,IACL,MACMlF,IAAMC,SAAS,IADrB,mBAAOkF,EAAP,KAAmBC,EAAnB,KAEA,EAGIpF,IAAM8D,WAAWtD,GAFjBiD,EADJ,EACIA,aACAT,EAFJ,EAEIA,aAEEqC,EAAW,WACbrC,GAAa,IAWjB,OACI,uBAAMsC,SAVM,SAACC,GACbA,EAAOC,iBACP/B,EAAa0B,GACbE,KAOA,UACI,0CACA,0BACInB,YAAY,QACZhB,MAAOiC,EACPhB,SAVM,SAACoB,GACfH,EAAeG,EAAOlB,OAAOnB,UAWzB,sBAAKc,UAAU,6BAAf,UACI,wBACIA,UAAU,6CACVyB,KAAK,SACLjB,QAASa,EAHb,sBAKA,wBACIrB,UAAU,0CACVyB,KAAK,SAFT,2BC3BhB,SAASC,IACP,MAMkB1F,IAAM8D,WAAWtD,GAN5BuB,EAAP,EAAOA,IACLF,EADF,EACEA,MACAV,EAFF,EAEEA,eACAgC,EAHF,EAGEA,UACAI,EAJF,EAIEA,OACAR,EALF,EAKEA,UACAC,EANF,EAMEA,aAEA,OACE,eAAC,IAAM2C,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,eAAC,EAAD,WACG,qDAAwB5D,KACxB,4BAAIF,IACJV,EAAeyE,KAAI,SAAAvE,GAAK,OACvB,cAAC,EAAD,CACEV,MAAOU,EAAMV,MACbC,WAAYS,EAAMT,WAClB6D,WAAY,kBAAItB,EAAU9B,EAAMV,QAChC+D,SAAU,kBAAInB,EAAOlC,EAAMV,aAG9B,6CAEAoC,GACD,cAAC8B,EAAD,UACI,cAAC,EAAD,MAGN,cAAC,EAAD,CACI7B,aAAcA,OC7BX6C,MARf,WACE,OACE,cAAChF,EAAD,UACE,cAAC6E,EAAD,OCISI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdjB,IAASyB,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BX,M","file":"static/js/main.0f421704.chunk.js","sourcesContent":["import React from 'react'\n\nfunction useCookies(nombreCookie, contenidoCookie){\n    const almacenamientoLocal = localStorage.getItem(nombreCookie)\n    let elementoGuardado\n  \n    if(!almacenamientoLocal){\n      //No hay una cookie guardada con el nombre dado\n      const elementoSerializado = JSON.stringify(contenidoCookie) // Serialization\n      localStorage.setItem(nombreCookie, elementoSerializado) // En esta linea se crea la cookie\n      elementoGuardado = contenidoCookie\n    }else{\n      //Existe una cookie con el nombre dado que ya tiene tareas\n      elementoGuardado = JSON.parse(almacenamientoLocal) //Deserialization\n    }\n    const [elemento, setElemento] = React.useState(elementoGuardado)\n    const guardar = (elementos) =>{\n      if(elementos.length <= 0){\n        localStorage.removeItem(nombreCookie)\n      }else{\n        const elementoSerializados = JSON.stringify(elementos)\n        localStorage.setItem(nombreCookie, elementoSerializados)\n      }\n      setElemento(elementos)\n    }\n    return [elemento, guardar]\n  }\n\n  export { useCookies }\n  ","import React from 'react'\nimport { useCookies } from './useCookies'\nimport { useGetBtc } from './useGetBtc'\nimport { useSearch } from './useSearch'\n\nconst AppContext = React.createContext()\n\nconst contenidoLista = [\n    {texto: \"Tarea 1\", completada: false},\n    {texto: \"Tarea 2\", completada: false},\n    {texto: \"Tarea 3\", completada: false}\n]\nconst nombreLista = 'MI_LISTA_TAREAS'\n\n\nfunction AppProvider(props){\n    const [tareas, guardar] = useCookies(nombreLista, contenidoLista)\n    const [valorBuscado, tareasBuscadas, buscarTarea] = useSearch(tareas)\n    \n    const {btc, error} = useGetBtc()\n    \n    const tareasCompletadas = tareas.filter(tarea => tarea.completada).length\n    const totalTareas = tareas.length\n    \n    const completar = (texto) =>{        \n        const indice = tareas.findIndex(tarea => tarea.texto === texto)\n        const nuevaLista = [...tareas]\n        nuevaLista[indice].completada = !nuevaLista[indice].completada\n        guardar(nuevaLista)\n    }  \n      \n    const borrar = (texto) =>{\n        const indice = tareas.findIndex(tarea => tarea.texto === texto)\n        const nuevaLista = [...tareas]\n        nuevaLista.splice(indice, 1)\n        guardar(nuevaLista)\n    }\n        \n    const nombreAutorCookie = 'NOMBRE_AUTOR'\n    const nombreAutorValor = 'JANE DOE'\n    const[nombreDelAutor] = useCookies(nombreAutorCookie, nombreAutorValor)\n\n    const [openModal, setOpenModal] = React.useState(false);\n\n    const agregarNueva = (text) =>{\n    const nuevaLista = [...tareas]\n    nuevaLista.push({\n        texto: text,\n        completada: false\n    })\n    guardar(nuevaLista)\n}\n    return (\n        <AppContext.Provider value={{\n            btc,\n            error, \n            tareasCompletadas,\n            totalTareas,\n            valorBuscado,\n            buscarTarea,\n            tareasBuscadas,\n            completar,\n            borrar,\n            nombreDelAutor,\n            openModal,\n            setOpenModal,\n            agregarNueva,\n        }}>\n            {props.children}\n        </AppContext.Provider>\n    )\n}\n\nexport { AppContext, AppProvider }\n\n","import React from 'react'\n\nfunction useSearch(tareas){\n    //Hooks de React para interactuar con el DOM\n    const [valorBuscado, buscarTarea] = React.useState('')\n   \n    //Comportamiento de busqueda\n   let tareasBuscadas = []\n   if(valorBuscado.length<=0){\n     tareasBuscadas = tareas\n   }else{\n     tareasBuscadas = tareas.filter(\n       tarea => {\n         const textoTarea = tarea.texto.toLowerCase()\n         const textoBuscado = valorBuscado.toLowerCase()\n         return textoTarea.includes(textoBuscado)\n       }\n     )\n   }\n\n   return [valorBuscado, tareasBuscadas, buscarTarea]\n}\n\nexport { useSearch }","import React from 'react'\n\nfunction useGetBtc(){\n    const [data, obtenerData] = React.useState(true)\n    const [error, setError] = React.useState(null)\n    const [btc, setBtc] = React.useState(null)\n  \n    const consultar = async() => {\n      const peticion = await fetch('http://api.coindesk.com/v1/bpi/currentprice.json')\n      const respuesta = await peticion.json()\n      obtenerData(respuesta)\n    }  \n  \n    React.useEffect(()=>{\n      try{\n        consultar()\n        setBtc(data.bpi.USD.rate)\n        setError(null)\n      }catch(error){\n        setError(\"Por favor recargue la pagina para ver el precio del BTC\")\n      }\n    })\n  \n    return {\n      btc,\n      error\n    }\n  }\n\n  export { useGetBtc }\n  ","import React from 'react';\nimport './Encabezado.css'\nimport { AppContext } from '../Context/'\n\nfunction Encabezado(){\n    const {taresCompletadas, totalTareas} = React.useContext(AppContext)\n    return(\n        <h1 className=\"Encabezado\">\n            Tareas completadas {taresCompletadas} de {totalTareas}\n        </h1>\n    )\n}\n\nexport { Encabezado }","import React from 'react';\nimport './BarraBusqueda.css'\nimport { AppContext } from '../Context/'\n\nfunction BarraBusqueda(){\n  const {valorBuscado, buscarTarea} = React.useContext(AppContext)\n  const buscar=(event)=>{\n    buscarTarea(event.target.value)\n  }\n    return (\n      <input \n        className=\"BarraBusqueda\"\n        placeholder=\"Tarea a buscar\"\n        onChange={buscar}\n        value={valorBuscado}\n      />\n    )\n}\nexport { BarraBusqueda }","import React from \"react\";\nimport './ListaTareas.css'\nfunction ListaTareas(props){\n    return(\n        <section>\n            <ul>\n                {props.children}\n            </ul>\n        </section>\n    )\n} \nexport { ListaTareas }","import React from \"react\";\nimport './Tarea.css'\nfunction Tarea(props){\n    return(\n        <li className='Tarea'>\n            <span \n                className='Icon Icon-check'\n                onClick={props.onComplete}\n            >COMPLETAR</span>\n            <p className={`Tarea-p ${props.completada && 'Tarea-p--completada'}`}>\n                {props.texto}\n            </p>\n            <span \n                className='Icon Icon-delete'\n                onClick={props.onDelete}\n            >BORRAR</span>\n        </li>\n    )\n} \nexport { Tarea }","import React from \"react\";\nimport './BotonCrear.css'\n\nfunction BotonCrear(props){\n    const onClickButton = () =>{\n        props.setOpenModal(prevState => !prevState)\n    }\n    return(\n        <button\n            className=\"BotonCrear\"\n            onClick={() => onClickButton(\n            \"Clickado!\"\n            )}\n        >+\n        </button>\n    )\n}\n\nexport { BotonCrear }","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './modal.css'\n\nfunction Modal({children}){\n\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.body\n    )\n}\n\nexport { Modal }","import React from 'react'\nimport './Formulario.css'\nimport { AppContext } from '../Context/'\n\nfunction Formulario(){\n    const [nuevaTarea, setNuevaTarea]\n        = React.useState('')\n    const {\n        agregarNueva,\n        setOpenModal\n    } = React.useContext(AppContext)\n    const cancelar = ()=>{\n        setOpenModal(false)\n    }\n    const agregar = (evento)=>{\n        evento.preventDefault()\n        agregarNueva(nuevaTarea)\n        cancelar()\n    }\n    const cambiando = (evento) =>{\n        setNuevaTarea (evento.target.value)\n    }\n\n    return (\n        <form onSubmit={agregar}>\n            <label>Tarea</label>\n            <textarea\n                placeholder=\"Tarea\"\n                value={nuevaTarea}\n                onChange={cambiando}\n            ></textarea>\n            <div className=\"Formulario-buttonContainer\">\n                <button\n                    className=\"Formulario-button Formulario-button-cancel\"\n                    type=\"button\"\n                    onClick={cancelar}>Cancelar\n                </button>\n                <button\n                    className=\"Formulario-button Formulario-button-add\"\n                    type=\"submit\">Agregar\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport { Formulario }","import React from 'react'\nimport { Encabezado} from '../Encabezado/'\nimport { BarraBusqueda } from '../BarraBusqueda/'\nimport { ListaTareas } from '../ListaTareas/'\nimport { Tarea } from '../Tarea/'\nimport { BotonCrear } from '../BotonCrear/'\nimport { AppContext } from '../Context'\nimport { Modal } from '../Modal/'\nimport { Formulario } from '../Formulario'\n\nfunction UI(){\n  const {btc,\n    error,\n    tareasBuscadas,\n    completar,\n    borrar,\n    openModal,\n    setOpenModal} = React.useContext(AppContext)\n\n    return(\n      <React.Fragment>\n        <Encabezado/>\n        <BarraBusqueda/>\n        <ListaTareas>\n          {<p>Valor de 1 Bitcoin: {btc}</p>}\n          {<p>{error}</p>}\n          {tareasBuscadas.map(tarea =>(\n            <Tarea\n              texto={tarea.texto}\n              completada={tarea.completada}\n              onComplete={()=>completar(tarea.texto)}\n              onDelete={()=>borrar(tarea.texto)}\n            />\n          ))}\n          {<p>Autor: </p>}\n        </ListaTareas>\n        {!!openModal && (\n          <Modal>\n              <Formulario></Formulario>\n          </Modal>\n        )}\n        <BotonCrear\n            setOpenModal={setOpenModal}\n        />\n      </React.Fragment>\n    )\n\n}\n\nexport { UI }","import './App.css';\nimport React from 'react'\nimport { UI } from './ui'\nimport { AppProvider } from '../Context'\n\nfunction App() {\n  return (\n    <AppProvider>\n      <UI/>\n    </AppProvider>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}